import os
import asyncio
import logging
from datetime import datetime

from dotenv import load_dotenv

from aiogram.types import Message
from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart, Command


load_dotenv()

TOKEN = os.getenv('TOKEN')

bot = Bot(TOKEN)
dp = Dispatcher()

WEDDING_DATE = datetime(2024, 8, 24)

GREETING_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç, {username}!\n"
    "–Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–≤–∞–¥—å–±–µ –ì—Ä–∏—à–∏ –∏ –õ–µ–Ω—ã!\n"
    "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /info\n"
    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å!\n"
)

INFO_MESSAGE = (
    "–°—Ç–∏–ª—å —Ç–∞–∫–æ–π-—Ç–æ\n"
    "–ë–µ–∑ –¥–µ—Ç–µ–π\n"
    "–ù–µ –¥–∞—Ä–∏—Ç–µ —Å–∫–æ—Ä–æ–≤–∞—Ä–∫–∏, –º—ã –∂–∏–≤–µ–º –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π - –Ω–µ —É–≤–µ–∑–µ–º!\n"
    "–°–±–æ—Ä —Ç–∞–º-—Ç–æ\n"
    "–¢–µ–ª–µ—Ñ–æ–Ω—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤: ____"
    "–ò –¥—Ä—É–≥–∞—è –∏–Ω—Ñ–∞!"
)

DAYS_LEFT_MESSAGE = (
    "–î–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å–Ω–æ–π –¥–∞—Ç—ã –æ—Å—Ç–∞–ª–æ—Å—å {days_count} {days_word}!!!\n"
    "–ï—â–µ —á—É—Ç—å-—á—É—Ç—å –∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ø–ª–∞–∫–∞—Ç—å –Ω–∞–¥ —Ç–µ–º, "
    "–∫–∞–∫–∏–µ –ì—Ä–∏—à–∞ –∏ –õ–µ–Ω–∞ –º–∏–ª—ã–µ ü•∞ü•∞ü•∞\n"
    "–ù—É –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏ –ø–æ–≤–µ—Å–µ–ª–∏—Ç—å—Å—è –æ—Ç –¥—É—à–∏ üçæüçæüçæ\n"
)

FALLBACK_MESSAGE = (
    '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–≤–∞–¥—å–±–µ –ì—Ä–∏—à–∏ –∏ –õ–µ–Ω—ã '
    '–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏!\n'
)

STICKER_DOG = (
    "CAACAgIAAxkBAAELIitlnrqebILw4fRZ1TxmDvhm6SFo6AACfwEAAj0N6AS98XKpqDIlKDQE"
)

@dp.message(CommandStart())
async def start(message: Message):
    username = message.from_user.full_name
    await message.answer(text=GREETING_MESSAGE.format(username=username))
    await bot.send_sticker(chat_id=message.chat.id, sticker=STICKER_DOG)


@dp.message(Command('info'))
async def help(message: Message):
    await message.answer(text=INFO_MESSAGE)


@dp.message(Command('days_left'))
async def days_until_wedding(message: Message):
    days_count = (WEDDING_DATE - datetime.now()).days
    days_word = ("–¥–Ω–µ–π" if days_count % 10 in {0, 5, 6, 7, 8, 9}
                or (11 <= days_count <= 19) else "–¥–Ω—è")  # noqa
    await message.answer(
        DAYS_LEFT_MESSAGE.format(days_count=days_count, days_word=days_word)
    )


@dp.message(Command('weather'))
async def weather(message: Message):
    pass


@dp.message()
async def answer(message: Message):
    await message.answer(text=FALLBACK_MESSAGE)
    await bot.send_sticker(chat_id=message.chat.id, sticker=STICKER_DOG)


async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
